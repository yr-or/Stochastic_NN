`timescale 1ns / 1ps

// Test different input digits into network
// NN dut takes binary values and outputs binary value
// Testing mathodology:
//     1) Running tests for different LFSR seeds but same digit
//     2) Running tests with different input digits but same seeds

module NN_top_tb();

    localparam NUM_INPS = 196;
    localparam NUM_TESTS = 10;

    // regs
    reg clk = 0;
    reg reset = 0;

    // wires
    wire [3:0] result_bin;
    wire done_stb;

    // Test input data - digits zero to nine
    logic [7:0] test_data_zero [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 170, 243, 216, 128, 128, 128, 128, 128, 128, 128, 128, 128, 129, 170, 251, 246, 231, 183, 128, 128, 128, 128, 128, 128, 128, 128, 185, 255, 229, 251, 180, 234, 128, 128, 128, 128, 128, 128, 128, 159, 250, 219, 139, 146, 128, 253, 155, 128, 128, 128, 128, 128, 136, 245, 175, 134, 128, 128, 128, 255, 177, 128, 128, 128, 128, 128, 193, 229, 128, 128, 128, 128, 128, 255, 171, 128, 128, 128, 128, 128, 212, 188, 128, 128, 128, 129, 194, 220, 130, 128, 128, 128, 128, 128, 213, 174, 128, 128, 142, 216, 202, 128, 128, 128, 128, 128, 128, 128, 212, 241, 193, 224, 244, 193, 135, 128, 128, 128, 128, 128, 128, 128, 160, 239, 255, 211, 146, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_one [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 137, 153, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 198, 199, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 198, 207, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 196, 225, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 174, 230, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 174, 244, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 153, 255, 132, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 138, 252, 152, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 226, 129, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 240, 144, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 132, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_two [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 138, 184, 192, 192, 163, 138, 130, 128, 128, 128, 128, 128, 128, 128, 213, 255, 255, 255, 255, 247, 242, 221, 135, 128, 128, 128, 128, 128, 233, 238, 207, 233, 250, 255, 255, 255, 245, 136, 128, 128, 128, 128, 128, 128, 128, 128, 141, 157, 194, 243, 255, 169, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 130, 235, 248, 142, 128, 128, 128, 128, 128, 128, 128, 128, 128, 141, 210, 254, 188, 128, 128, 128, 128, 128, 128, 128, 128, 128, 171, 235, 253, 190, 128, 128, 128, 128, 128, 128, 128, 128, 128, 199, 250, 239, 165, 128, 128, 128, 128, 128, 128, 128, 128, 128, 129, 249, 255, 217, 171, 169, 137, 129, 128, 128, 128, 128, 128, 128, 138, 228, 252, 255, 255, 255, 248, 216, 128, 128, 128, 128, 128, 128, 128, 128, 147, 162, 192, 175, 140, 143, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_three [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 133, 147, 192, 191, 191, 151, 128, 128, 128, 128, 128, 128, 128, 156, 237, 251, 255, 254, 254, 243, 137, 128, 128, 128, 128, 128, 128, 142, 198, 176, 161, 170, 251, 244, 136, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 173, 253, 211, 128, 128, 128, 128, 128, 128, 128, 132, 168, 176, 229, 254, 234, 158, 128, 128, 128, 128, 128, 128, 128, 195, 255, 255, 255, 255, 191, 128, 128, 128, 128, 128, 128, 128, 128, 132, 150, 139, 139, 211, 210, 128, 128, 128, 128, 128, 128, 128, 138, 129, 128, 128, 140, 232, 210, 128, 128, 128, 128, 128, 128, 162, 246, 167, 162, 173, 233, 246, 177, 128, 128, 128, 128, 128, 128, 160, 242, 254, 254, 244, 212, 148, 128, 128, 128, 128, 128, 128, 128, 128, 142, 189, 162, 131, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_four [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 167, 133, 128, 128, 128, 128, 184, 128, 128, 128, 128, 128, 128, 128, 214, 138, 128, 128, 128, 128, 228, 128, 128, 128, 128, 128, 128, 155, 231, 128, 128, 128, 128, 150, 235, 128, 128, 128, 128, 128, 128, 187, 205, 128, 128, 128, 128, 169, 218, 128, 128, 128, 128, 130, 162, 248, 170, 128, 128, 128, 128, 168, 236, 182, 194, 215, 223, 221, 186, 255, 133, 128, 128, 128, 128, 128, 167, 174, 174, 148, 128, 128, 163, 241, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 172, 209, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 172, 219, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 172, 234, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 140, 181, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_five [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 223, 255, 255, 231, 128, 128, 128, 128, 128, 128, 128, 128, 168, 247, 223, 199, 184, 160, 128, 128, 128, 128, 128, 128, 192, 176, 136, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 168, 247, 144, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 255, 231, 184, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 144, 184, 247, 168, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 136, 231, 176, 128, 128, 128, 128, 128, 128, 128, 128, 192, 223, 192, 231, 247, 144, 128, 128, 128, 128, 128, 128, 128, 128, 239, 239, 231, 192, 144, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_six [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 163, 251, 222, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 168, 254, 211, 237, 128, 128, 128, 128, 128, 128, 128, 128, 128, 143, 247, 225, 135, 133, 128, 128, 128, 128, 128, 128, 128, 128, 128, 212, 248, 147, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 144, 249, 214, 165, 177, 157, 128, 128, 128, 128, 128, 128, 128, 128, 181, 255, 238, 246, 230, 252, 155, 128, 128, 128, 128, 128, 128, 128, 185, 255, 244, 152, 142, 255, 174, 128, 128, 128, 128, 128, 128, 128, 185, 244, 168, 129, 210, 249, 139, 128, 128, 128, 128, 128, 128, 128, 152, 252, 218, 220, 255, 170, 128, 128, 128, 128, 128, 128, 128, 128, 128, 162, 224, 226, 189, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_seven [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 138, 128, 128, 128, 128, 128, 140, 174, 189, 201, 144, 128, 128, 128, 129, 128, 128, 128, 157, 219, 247, 210, 181, 255, 178, 128, 128, 128, 128, 128, 128, 128, 164, 188, 141, 138, 236, 219, 131, 128, 128, 128, 128, 128, 128, 128, 128, 128, 138, 236, 224, 133, 128, 128, 128, 128, 128, 128, 128, 128, 128, 137, 231, 219, 133, 128, 128, 128, 128, 128, 128, 128, 128, 128, 132, 226, 231, 133, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 198, 226, 136, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 168, 151, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_eight [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 133, 170, 182, 158, 130, 128, 128, 128, 128, 128, 128, 128, 128, 128, 174, 255, 239, 236, 225, 128, 128, 128, 128, 128, 128, 128, 128, 128, 185, 244, 131, 149, 250, 196, 128, 128, 128, 128, 128, 128, 128, 128, 185, 253, 202, 248, 251, 184, 128, 128, 128, 128, 128, 128, 128, 128, 191, 255, 255, 200, 132, 128, 128, 128, 128, 128, 128, 128, 132, 186, 251, 235, 155, 128, 128, 128, 128, 128, 128, 128, 128, 134, 223, 255, 245, 209, 128, 128, 128, 128, 128, 128, 128, 128, 128, 198, 218, 159, 226, 209, 128, 128, 128, 128, 128, 128, 128, 128, 140, 250, 168, 149, 254, 182, 128, 128, 128, 128, 128, 128, 128, 128, 148, 252, 244, 251, 224, 130, 128, 128, 128, 128, 128, 128, 128, 128, 128, 163, 192, 183, 136, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128  };
    logic [7:0] test_data_nine [0:NUM_INPS-1] = '{ 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 153, 191, 166, 128, 128, 128, 128, 128, 128, 128, 128, 128, 148, 209, 238, 205, 255, 155, 128, 128, 128, 128, 128, 128, 128, 151, 241, 162, 129, 196, 229, 129, 128, 128, 128, 128, 128, 128, 128, 186, 180, 128, 145, 245, 193, 128, 128, 128, 128, 128, 128, 128, 128, 187, 246, 220, 232, 255, 145, 128, 128, 128, 128, 128, 128, 128, 128, 128, 153, 159, 203, 206, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 145, 238, 137, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 137, 232, 180, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 202, 197, 129, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 158, 246, 134, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 148, 158, 128, 128, 128, 128, 128, 128, 128, 128  };


    // LFSR seeds or input SNGs
    logic [7:0] LFSR_seeds [0:29] = '{252, 56, 61, 19, 176, 65, 7, 219, 37, 127, 100, 241, 213, 10, 158, 38, 205, 69, 105, 27, 64, 42, 77, 175, 69, 109, 168, 217, 164, 150};
    logic [7:0] LFSR_seed;

    // Inst. NN_top
    NN_top dut(
        .clk                (clk),
        .reset              (reset),
        .input_data_bin     (test_data_nine),
        .LFSR_inp_seed      (LFSR_seed),

        .result_bin         (result_bin),
        .done               (done_stb)
    );

    integer fd; // file object

    // Apply test data in order, change LFSR seed each time to test
    // Total time = 41200*NUM_TESTS + 10 = ~41us
    initial begin
        fd = $fopen("NN_test.txt", "w");
        reset = 1;
        #10;

        for (int i=0; i<NUM_TESTS; i=i+1) begin
            // Set LFSR seed 
            reset = 1;
            LFSR_seed = LFSR_seeds[i];

            // Hold reset for 2 clks
            #40;
            reset = 0;

            // Wait 256 clock cycles + 10 clk cycles for max module
            //#5100;
            //#200;

            // Wait 2048 clk cycles + 10 for max module
            #40960;
            #200;

            // print results
            $display("Test: %d", i+1);
            $fdisplay(fd, "Test: %d", i+1);

            $write("Result: %d", result_bin);
            $fwrite(fd, "Result: %d", result_bin);

            $write("\n");
            $fwrite(fd, "\n");
        end
        $fclose(fd);
    end

    // Clock gen
    always begin
        #10;
        clk = ~clk;
    end

endmodule
